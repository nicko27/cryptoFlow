"""
Messages pour les notifications
"""

class NotificationMessages:
    """Messages centralis√©s pour les notifications"""
    
    # Messages de prix
    PRICE_MESSAGES = {
        "strong_up": {
            "normal": "Forte hausse aujourd'hui !",
            "kid_friendly": "Super ! Le prix monte beaucoup aujourd'hui üöÄ"
        },
        "up": {
            "normal": "Hausse mod√©r√©e",
            "kid_friendly": "Le prix monte un peu üìà"
        },
        "stable": {
            "normal": "Prix stable",
            "kid_friendly": "Le prix ne bouge pas beaucoup üòå"
        },
        "down": {
            "normal": "Baisse mod√©r√©e",
            "kid_friendly": "Le prix baisse un peu üìâ"
        },
        "strong_down": {
            "normal": "Forte baisse aujourd'hui",
            "kid_friendly": "Attention ! Le prix baisse beaucoup üò∞"
        }
    }
    
    # Messages d'opportunit√©
    OPPORTUNITY_MESSAGES = {
        "excellent": {
            "normal": "Excellente opportunit√© d'achat !",
            "kid_friendly": "C'est un tr√®s bon moment pour acheter ! ‚≠ê"
        },
        "good": {
            "normal": "Bonne opportunit√©",
            "kid_friendly": "C'est un bon moment pour acheter üëç"
        },
        "neutral": {
            "normal": "Opportunit√© moyenne",
            "kid_friendly": "Tu peux acheter, mais ce n'est pas le meilleur moment ü§î"
        },
        "medium": {
            "normal": "Opportunit√© correcte",
            "kid_friendly": "Chance correcte, mais reste prudent ü§î"
        },
        "poor": {
            "normal": "Opportunit√© faible",
            "kid_friendly": "Ce n'est pas le meilleur moment pour acheter üòï"
        },
        "low": {
            "normal": "Opportunit√© tr√®s faible",
            "kid_friendly": "Pas top en ce moment, mieux vaut attendre üòï"
        },
        "bad": {
            "normal": "Mauvaise opportunit√©",
            "kid_friendly": "Attends un peu avant d'acheter ! ‚è∏Ô∏è"
        }
    }
    
    # Messages de pr√©diction
    PREDICTION_MESSAGES = {
        "bullish": {
            "normal": "Tendance haussi√®re pr√©vue",
            "kid_friendly": "Le robot pense que le prix va monter üöÄ"
        },
        "bearish": {
            "normal": "Tendance baissi√®re pr√©vue",
            "kid_friendly": "Le robot pense que le prix va baisser üìâ"
        },
        "neutral": {
            "normal": "Tendance neutre",
            "kid_friendly": "Le robot ne sait pas si √ßa va monter ou descendre ü§∑"
        }
    }
    
    # Disclaimers
    DISCLAIMERS = {
        "default": "Ceci est une information, pas un conseil financier.",
        "kid_friendly": "N'investis jamais plus que ce que tu peux te permettre de perdre !",
        "detailed": "Les informations fournies ne constituent pas un conseil en investissement. Consultez un professionnel avant toute d√©cision financi√®re."
    }

    FEAR_GREED_MESSAGES = {
        "extreme_fear": {
            "normal": "Peur extr√™me : le march√© vend massivement.",
            "kid_friendly": "Tout le monde a tr√®s peur et vend beaucoup üò±"
        },
        "fear": {
            "normal": "Peur sur le march√©, prudence recommand√©e.",
            "kid_friendly": "Les gens ont peur, les prix peuvent baisser üòü"
        },
        "neutral": {
            "normal": "Sentiment neutre, le march√© reste √©quilibr√©.",
            "kid_friendly": "Personne n'est vraiment paniqu√© ni trop excit√© üòê"
        },
        "greed": {
            "normal": "Avidit√© croissante : l'optimisme domine.",
            "kid_friendly": "Beaucoup sont optimistes, les prix montent üòä"
        },
        "extreme_greed": {
            "normal": "Avidit√© extr√™me : attention au retournement.",
            "kid_friendly": "Tout le monde est euphorique, fais attention aux chutes ü§ë"
        }
    }
    
    # Glossaire par d√©faut
    DEFAULT_GLOSSARY = {
        "RSI": "Indicateur qui montre si un actif est surachet√© (>70) ou survendu (<30)",
        "Support": "Niveau de prix o√π l'achat est fort, emp√™chant la baisse",
        "R√©sistance": "Niveau de prix o√π la vente est forte, emp√™chant la hausse",
        "Volume": "Quantit√© d'actifs √©chang√©s sur une p√©riode",
        "Volatilit√©": "Amplitude des variations de prix",
        "Bull": "March√© en hausse, optimiste",
        "Bear": "March√© en baisse, pessimiste",
        "ATH": "All Time High - Plus haut historique",
        "ATL": "All Time Low - Plus bas historique",
        "HODL": "Strat√©gie consistant √† garder ses actifs long terme"
    }
    
    @staticmethod
    def get_price_message(change_percent: float, kid_friendly: bool = False) -> str:
        """Retourne un message appropri√© selon la variation de prix"""
        key = "kid_friendly" if kid_friendly else "normal"
        
        if change_percent > 5:
            return NotificationMessages.PRICE_MESSAGES["strong_up"][key]
        elif change_percent > 2:
            return NotificationMessages.PRICE_MESSAGES["up"][key]
        elif change_percent > -2:
            return NotificationMessages.PRICE_MESSAGES["stable"][key]
        elif change_percent > -5:
            return NotificationMessages.PRICE_MESSAGES["down"][key]
        else:
            return NotificationMessages.PRICE_MESSAGES["strong_down"][key]
    
    @staticmethod
    def get_opportunity_message(score: int, kid_friendly: bool = False) -> str:
        """Retourne un message appropri√© selon le score d'opportunit√©"""
        key = "kid_friendly" if kid_friendly else "normal"
        
        if score >= 8:
            return NotificationMessages.OPPORTUNITY_MESSAGES["excellent"][key]
        elif score >= 6:
            return NotificationMessages.OPPORTUNITY_MESSAGES["good"][key]
        elif score >= 4:
            return NotificationMessages.OPPORTUNITY_MESSAGES["medium"][key]
        elif score >= 2:
            return NotificationMessages.OPPORTUNITY_MESSAGES["low"][key]
        else:
            return NotificationMessages.OPPORTUNITY_MESSAGES["bad"][key]

    @staticmethod
    def get_fear_greed_message(index: float, kid_friendly: bool = False) -> str:
        """Retourne un message adapt√© selon l'indice Fear & Greed"""
        if index is None:
            return ""
        key = "kid_friendly" if kid_friendly else "normal"
        try:
            value = float(index)
        except (TypeError, ValueError):
            return ""

        if value <= 20:
            bucket = "extreme_fear"
        elif value <= 40:
            bucket = "fear"
        elif value < 60:
            bucket = "neutral"
        elif value < 80:
            bucket = "greed"
        else:
            bucket = "extreme_greed"

        return NotificationMessages.FEAR_GREED_MESSAGES[bucket][key]
